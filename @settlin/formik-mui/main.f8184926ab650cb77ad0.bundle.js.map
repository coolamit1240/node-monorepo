{"version":3,"file":"main.f8184926ab650cb77ad0.bundle.js","sources":["webpack:///./src/forms/ButtonGroup.js"],"sourcesContent":["import React from 'react';\nimport clsx from 'clsx';\n\nimport ToggleButton from '@material-ui/lab/ToggleButton';\nimport MuiToggleButtonGroup from '@material-ui/lab/ToggleButtonGroup';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport formikToMuiProps from '../forms/formikToMuiProps';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport formControl from '../styles/formControl';\nimport formLabel from '../styles/formLabel';\n\nconst styles = {\n\tformControlCompact: formControl.compact,\n\tformControlNormal: formControl.normal,\n\tformLabel,\n\tbutton: {\n\t\theight: '100%',\n\t},\n\tbuttonGroup: {\n\t\tmarginTop: '8px',\n\t\twidth: 'max-content',\n\t},\n};\n\nclass ToggleButtonGroup extends React.Component {\n\tconstructor(p) {\n\t\tsuper(p);\n\t\tthis.handleChange = this.handleChange.bind(this);\n\t\tthis.handleBlur = this.handleBlur.bind(this);\n\t}\n\n\thandleChange(event, value) {\n  \tif (this.props.field) this.props.form.setFieldValue(this.props.field.name, value);\n  \tif (this.props.onChange) this.props.onChange(event.target.value);\n\t}\n\n\thandleBlur() {\n  \t// take care of touched\n\t\tif (this.props.field) this.props.form.setFieldTouched(this.props.field.name, true);\n\t}\n\n\trender() {\n  \tlet {\n  \t\tlabel,\n\t\t\tFormControlProps: {classes: fClasses = {}, ...FormControlProps} = {},\n  \t\tFormLabelProps,\n  \t\tFormHelperTextProps = {},\n  \t\tToggleButtonProps = {},\n  \t\tToggleButtonGroupProps: {classes: tClasses = {}, ...ToggleButtonGroupProps} = {},\n  \t\tcompact,\n  \t\tclasses,\n\t\t\toptions,\n\t\t\texclusive = true,\n  \t\t...props\n  \t} = this.props;\n\n\t\tconst {error, helperText, ...fp} = formikToMuiProps(props);\n\t\tToggleButtonProps.classes = {...ToggleButtonProps.classes, root: clsx(classes.button, (ToggleButtonProps.classes || {}).root)};\n\n  \treturn (\n  \t\t<FormControl\n  \t\t\terror={error}\n  \t\t\t{...FormControlProps}\n\t\t\t\tclasses={{...fClasses, root: clsx(fClasses.root, classes[`formControl${compact ? 'Compact' : 'Normal'}`])}}\n  \t\t>\n  \t\t\t{label && (\n  \t\t\t\t<FormLabel\n  \t\t\t\t\t{...FormLabelProps}\n  \t\t\t\t\tclasses={{...(FormLabelProps || {}).classes, ...(compact ? {root: classes.formLabel} : {})}}\n  \t\t\t\t>\n\t\t\t\t\t\t{label}\n\t\t\t\t\t\t{helperText && (\n\t\t\t\t\t\t\t<FormHelperText\n\t\t\t\t\t\t\t\t{...FormHelperTextProps}\n\t\t\t\t\t\t\t\terror={error}\n\t\t\t\t\t\t\t\tclassName={FormHelperTextProps.className}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t{helperText}\n\t\t\t\t\t\t\t</FormHelperText>\n\t\t\t\t\t\t)}\n  \t\t\t\t</FormLabel>\n\t\t\t\t)}\n  \t\t\t<MuiToggleButtonGroup\n  \t\t\t\t{...ToggleButtonGroupProps}\n  \t\t\t\t{...fp}\n\t\t\t\t\texclusive={exclusive}\n\t\t\t\t\tonChange={this.handleChange}\n\t\t\t\t\tonBlur={this.handleBlur}\n\t\t\t\t\tclasses={compact ? {} : {root: clsx(tClasses.root, classes.buttonGroup)}}\n  \t\t\t>\n  \t\t\t\t{options.map(option => (\n  \t\t\t\t\t<ToggleButton\n  \t\t\t\t\t\tkey={option.value}\n  \t\t\t\t\t\t{...ToggleButtonProps}\n\t\t\t\t\t\t\tvalue={option.value}\n  \t\t\t\t\t>{option.label}</ToggleButton>\n  \t\t\t\t))}\n  \t\t\t</MuiToggleButtonGroup>\n  \t\t</FormControl>\n  \t);\n\t}\n}\n\nexport default withStyles(styles)(ToggleButtonGroup);\n"],"mappings":"AAaA","sourceRoot":""}